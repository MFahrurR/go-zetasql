
extern void GO_EXPORT(AnalyzeStatement)(void * arg0,void * arg1,void ** arg2,void ** arg3);
extern void GO_EXPORT(AnalyzerOutput_resolved_statement)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedNode_node_kind)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedNode_IsScan)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedNode_IsExpression)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedNode_IsStatement)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedNode_DebugString)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedNode_GetChildNodes_num)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedNode_GetChildNode)(void * arg0,int arg1,void ** arg2);
extern void GO_EXPORT(ResolvedNode_GetTreeDepth)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedExpr_type)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedExpr_set_type)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedExpr_type_annotation_map)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedExpr_set_type_annotation_map)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedLiteral_value)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedLiteral_set_value)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedLiteral_has_explicit_type)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedLiteral_set_has_explicit_type)(void * arg0,int arg1);
extern void GO_EXPORT(ResolvedLiteral_float_literal_id)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedLiteral_set_float_literal_id)(void * arg0,int arg1);
extern void GO_EXPORT(ResolvedLiteral_preserve_in_literal_remover)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedLiteral_set_preserve_in_literal_remover)(void * arg0,int arg1);
extern void GO_EXPORT(ResolvedParameter_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedParameter_set_name)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedParameter_position)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedParameter_set_position)(void * arg0,int arg1);
extern void GO_EXPORT(ResolvedParameter_is_untyped)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedParameter_set_is_untyped)(void * arg0,int arg1);
extern void GO_EXPORT(ResolvedExpressionColumn_name)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedExpressionColumn_set_name)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedColumnRef_column)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedColumnRef_set_column)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedColumnRef_is_correlated)(void * arg0,int* arg1);
extern void GO_EXPORT(ResolvedColumnRef_set_is_correlated)(void * arg0,int arg1);
extern void GO_EXPORT(ResolvedConstant_constant)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedConstant_set_constant)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedSystemVariable_name_path)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedSystemVariable_set_name_path)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedSystemVariable_add_name_path)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedInlineLambda_argument_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedInlineLambda_set_argument_list)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedInlineLambda_add_argument)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedInlineLambda_parameter_list)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedInlineLambda_set_parameter_list)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedInlineLambda_add_parameter)(void * arg0,void * arg1);
extern void GO_EXPORT(ResolvedInlineLambda_body)(void * arg0,void ** arg1);
extern void GO_EXPORT(ResolvedInlineLambda_set_body)(void * arg0,void * arg1);
